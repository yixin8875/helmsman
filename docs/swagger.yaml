definitions:
  types.AccountsObjDetail:
    properties:
      createdAt:
        type: string
      currency:
        type: string
      id:
        description: convert to uint64 id
        type: integer
      initialBalance:
        type: number
      name:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  types.Column:
    properties:
      exp:
        description: expressions, which default to = when the value is null, have
          =, !=, >, >=, <, <=, like
        type: string
      logic:
        description: logical type, default value is "and", support &, and, ||, or
        type: string
      name:
        description: column name
        type: string
      value:
        description: column value
    type: object
  types.Conditions:
    properties:
      columns:
        description: columns info
        items:
          $ref: '#/definitions/types.Column'
        type: array
    type: object
  types.CreateAccountsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateAccountsRequest:
    properties:
      currency:
        type: string
      initialBalance:
        type: number
      name:
        type: string
      userID:
        type: integer
    type: object
  types.CreateSnapshotsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateSnapshotsRequest:
    properties:
      imageURL:
        type: string
      tradeID:
        type: integer
      type:
        type: string
    type: object
  types.CreateStrategiesReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateStrategiesRequest:
    properties:
      description:
        type: string
      name:
        type: string
      userID:
        type: integer
    type: object
  types.CreateTagsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateTagsRequest:
    properties:
      color:
        type: string
      name:
        type: string
      userID:
        type: integer
    type: object
  types.CreateTradeTagsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          tradeID:
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateTradeTagsRequest:
    properties:
      tagID:
        type: integer
      tradeID:
        type: integer
    type: object
  types.CreateTradesReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateTradesRequest:
    properties:
      accountID:
        type: integer
      actualEntryPrice:
        type: number
      actualEntryTime:
        type: string
      actualExitPrice:
        type: number
      actualExitTime:
        type: string
      commission:
        type: number
      direction:
        type: string
      executionScore:
        type: integer
      exitReason:
        type: string
      planNotes:
        type: string
      plannedEntryPrice:
        type: number
      plannedRiskAmount:
        type: number
      plannedStopLoss:
        type: number
      plannedTakeProfit:
        type: number
      pnl:
        type: number
      positionSize:
        type: number
      rMultiple:
        type: number
      reflectionNotes:
        type: string
      status:
        type: string
      strategyID:
        type: integer
      symbol:
        type: string
    type: object
  types.CreateUsersReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateUsersRequest:
    properties:
      passwordHash:
        type: string
      username:
        type: string
    type: object
  types.DeleteAccountsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteSnapshotsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteStrategiesByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteTagsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteTradeTagsByTradeIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteTradesByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUsersByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetAccountsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          accounts:
            $ref: '#/definitions/types.AccountsObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetAllStrategiesReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          strategiess:
            items:
              $ref: '#/definitions/types.StrategiesObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetSnapshotsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          snapshots:
            $ref: '#/definitions/types.SnapshotsObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetStrategiesByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          strategies:
            $ref: '#/definitions/types.StrategiesObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetTagsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          tags:
            $ref: '#/definitions/types.TagsObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetTradeTagsByTradeIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          tradeTags:
            $ref: '#/definitions/types.TradeTagsObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetTradesByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          trades:
            $ref: '#/definitions/types.TradesObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUsersByConditionReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          users:
            $ref: '#/definitions/types.UsersObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUsersByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          users:
            $ref: '#/definitions/types.UsersObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListAccountssReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          accountss:
            items:
              $ref: '#/definitions/types.AccountsObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListSnapshotssReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          snapshotss:
            items:
              $ref: '#/definitions/types.SnapshotsObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListStrategiessReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          strategiess:
            items:
              $ref: '#/definitions/types.StrategiesObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListTagssReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          tagss:
            items:
              $ref: '#/definitions/types.TagsObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListTradeTagsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          tradeTags:
            items:
              $ref: '#/definitions/types.TradeTagsObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListTradessReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          tradess:
            items:
              $ref: '#/definitions/types.TradesObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.LoginReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
          token:
            description: token
            type: string
          username:
            description: username
            type: string
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  types.Params:
    properties:
      columns:
        description: query conditions
        items:
          $ref: '#/definitions/types.Column'
        type: array
      limit:
        description: lines per page
        type: integer
      page:
        description: page number, starting from page 0
        type: integer
      sort:
        description: sorted fields, multi-column sorting separated by commas
        type: string
    type: object
  types.RegisterReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  types.SnapshotsObjDetail:
    properties:
      createdAt:
        type: string
      id:
        description: convert to uint64 id
        type: integer
      imageURL:
        type: string
      tradeID:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
    type: object
  types.StrategiesObjDetail:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        description: convert to uint64 id
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  types.TagsObjDetail:
    properties:
      color:
        type: string
      createdAt:
        type: string
      id:
        description: convert to uint64 id
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  types.TradeTagsObjDetail:
    properties:
      createdAt:
        type: string
      tagID:
        type: integer
      tradeID:
        type: integer
      updatedAt:
        type: string
    type: object
  types.TradesObjDetail:
    properties:
      accountID:
        type: integer
      actualEntryPrice:
        type: number
      actualEntryTime:
        type: string
      actualExitPrice:
        type: number
      actualExitTime:
        type: string
      commission:
        type: number
      createdAt:
        type: string
      direction:
        type: string
      executionScore:
        type: integer
      exitReason:
        type: string
      id:
        description: convert to uint64 id
        type: integer
      planNotes:
        type: string
      plannedEntryPrice:
        type: number
      plannedRiskAmount:
        type: number
      plannedStopLoss:
        type: number
      plannedTakeProfit:
        type: number
      pnl:
        type: number
      positionSize:
        type: number
      rMultiple:
        type: number
      reflectionNotes:
        type: string
      status:
        type: string
      strategyID:
        type: integer
      symbol:
        type: string
      updatedAt:
        type: string
    type: object
  types.UpdateAccountsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateAccountsByIDRequest:
    properties:
      currency:
        type: string
      id:
        description: uint64 id
        type: integer
      initialBalance:
        type: number
      name:
        type: string
      userID:
        type: integer
    type: object
  types.UpdateSnapshotsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateSnapshotsByIDRequest:
    properties:
      id:
        description: uint64 id
        type: integer
      imageURL:
        type: string
      tradeID:
        type: integer
      type:
        type: string
    type: object
  types.UpdateStrategiesByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateStrategiesByIDRequest:
    properties:
      description:
        type: string
      id:
        description: uint64 id
        type: integer
      name:
        type: string
      userID:
        type: integer
    type: object
  types.UpdateTagsByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateTagsByIDRequest:
    properties:
      color:
        type: string
      id:
        description: uint64 id
        type: integer
      name:
        type: string
      userID:
        type: integer
    type: object
  types.UpdateTradeTagsByTradeIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateTradeTagsByTradeIDRequest:
    properties:
      tagID:
        type: integer
      tradeID:
        type: integer
    type: object
  types.UpdateTradesByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateTradesByIDRequest:
    properties:
      accountID:
        type: integer
      actualEntryPrice:
        type: number
      actualEntryTime:
        type: string
      actualExitPrice:
        type: number
      actualExitTime:
        type: string
      commission:
        type: number
      direction:
        type: string
      executionScore:
        type: integer
      exitReason:
        type: string
      id:
        description: uint64 id
        type: integer
      planNotes:
        type: string
      plannedEntryPrice:
        type: number
      plannedRiskAmount:
        type: number
      plannedStopLoss:
        type: number
      plannedTakeProfit:
        type: number
      pnl:
        type: number
      positionSize:
        type: number
      rMultiple:
        type: number
      reflectionNotes:
        type: string
      status:
        type: string
      strategyID:
        type: integer
      symbol:
        type: string
    type: object
  types.UpdateUsersByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateUsersByIDRequest:
    properties:
      id:
        description: uint64 id
        type: integer
      passwordHash:
        type: string
      username:
        type: string
    type: object
  types.UsersObjDetail:
    properties:
      createdAt:
        type: string
      id:
        description: convert to uint64 id
        type: integer
      passwordHash:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: http server api docs
  title: helmsman api docs
  version: v1.0.0
paths:
  /api/v1/accounts:
    post:
      consumes:
      - application/json
      description: Creates a new accounts entity using the provided data in the request
        body.
      parameters:
      - description: accounts information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateAccountsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateAccountsReply'
      security:
      - BearerAuth: []
      summary: Create a new accounts
      tags:
      - accounts
  /api/v1/accounts/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a existing accounts identified by the given id in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteAccountsByIDReply'
      security:
      - BearerAuth: []
      summary: Delete a accounts by id
      tags:
      - accounts
    get:
      consumes:
      - application/json
      description: Gets detailed information of a accounts specified by the given
        id in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetAccountsByIDReply'
      security:
      - BearerAuth: []
      summary: Get a accounts by id
      tags:
      - accounts
    put:
      consumes:
      - application/json
      description: Updates the specified accounts by given id in the path, support
        partial update.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: accounts information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateAccountsByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateAccountsByIDReply'
      security:
      - BearerAuth: []
      summary: Update a accounts by id
      tags:
      - accounts
  /api/v1/accounts/list:
    post:
      consumes:
      - application/json
      description: Returns a paginated list of accounts based on query filters, including
        page number and size.
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListAccountssReply'
      security:
      - BearerAuth: []
      summary: Get a paginated list of accountss by custom conditions
      tags:
      - accounts
  /api/v1/snapshots:
    post:
      consumes:
      - application/json
      description: Creates a new snapshots entity using the provided data in the request
        body.
      parameters:
      - description: snapshots information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateSnapshotsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateSnapshotsReply'
      security:
      - BearerAuth: []
      summary: Create a new snapshots
      tags:
      - snapshots
  /api/v1/snapshots/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a existing snapshots identified by the given id in the
        path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteSnapshotsByIDReply'
      security:
      - BearerAuth: []
      summary: Delete a snapshots by id
      tags:
      - snapshots
    get:
      consumes:
      - application/json
      description: Gets detailed information of a snapshots specified by the given
        id in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetSnapshotsByIDReply'
      security:
      - BearerAuth: []
      summary: Get a snapshots by id
      tags:
      - snapshots
    put:
      consumes:
      - application/json
      description: Updates the specified snapshots by given id in the path, support
        partial update.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: snapshots information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSnapshotsByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateSnapshotsByIDReply'
      security:
      - BearerAuth: []
      summary: Update a snapshots by id
      tags:
      - snapshots
  /api/v1/snapshots/list:
    post:
      consumes:
      - application/json
      description: Returns a paginated list of snapshots based on query filters, including
        page number and size.
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListSnapshotssReply'
      security:
      - BearerAuth: []
      summary: Get a paginated list of snapshotss by custom conditions
      tags:
      - snapshots
  /api/v1/strategies:
    post:
      consumes:
      - application/json
      description: Creates a new strategies entity using the provided data in the
        request body.
      parameters:
      - description: strategies information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateStrategiesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateStrategiesReply'
      security:
      - BearerAuth: []
      summary: Create a new strategies
      tags:
      - strategies
  /api/v1/strategies/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a existing strategies identified by the given id in the
        path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteStrategiesByIDReply'
      security:
      - BearerAuth: []
      summary: Delete a strategies by id
      tags:
      - strategies
    get:
      consumes:
      - application/json
      description: Gets detailed information of a strategies specified by the given
        id in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetStrategiesByIDReply'
      security:
      - BearerAuth: []
      summary: Get a strategies by id
      tags:
      - strategies
    put:
      consumes:
      - application/json
      description: Updates the specified strategies by given id in the path, support
        partial update.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: strategies information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateStrategiesByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateStrategiesByIDReply'
      security:
      - BearerAuth: []
      summary: Update a strategies by id
      tags:
      - strategies
  /api/v1/strategies/all:
    get:
      consumes:
      - application/json
      description: Returns a list of all strategies.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetAllStrategiesReply'
      security:
      - BearerAuth: []
      summary: Get all strategiess
      tags:
      - strategies
  /api/v1/strategies/list:
    post:
      consumes:
      - application/json
      description: Returns a paginated list of strategies based on query filters,
        including page number and size.
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListStrategiessReply'
      security:
      - BearerAuth: []
      summary: Get a paginated list of strategiess by custom conditions
      tags:
      - strategies
  /api/v1/tags:
    post:
      consumes:
      - application/json
      description: Creates a new tags entity using the provided data in the request
        body.
      parameters:
      - description: tags information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateTagsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateTagsReply'
      security:
      - BearerAuth: []
      summary: Create a new tags
      tags:
      - tags
  /api/v1/tags/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a existing tags identified by the given id in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteTagsByIDReply'
      security:
      - BearerAuth: []
      summary: Delete a tags by id
      tags:
      - tags
    get:
      consumes:
      - application/json
      description: Gets detailed information of a tags specified by the given id in
        the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetTagsByIDReply'
      security:
      - BearerAuth: []
      summary: Get a tags by id
      tags:
      - tags
    put:
      consumes:
      - application/json
      description: Updates the specified tags by given id in the path, support partial
        update.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tags information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateTagsByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateTagsByIDReply'
      security:
      - BearerAuth: []
      summary: Update a tags by id
      tags:
      - tags
  /api/v1/tags/list:
    post:
      consumes:
      - application/json
      description: Returns a paginated list of tags based on query filters, including
        page number and size.
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListTagssReply'
      security:
      - BearerAuth: []
      summary: Get a paginated list of tagss by custom conditions
      tags:
      - tags
  /api/v1/tags/list/all:
    get:
      consumes:
      - application/json
      description: Returns a list of all tags.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListTagssReply'
      security:
      - BearerAuth: []
      summary: Get all tags
      tags:
      - tags
  /api/v1/tradeTags:
    post:
      consumes:
      - application/json
      description: Creates a new tradeTags entity using the provided data in the request
        body.
      parameters:
      - description: tradeTags information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateTradeTagsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateTradeTagsReply'
      security:
      - BearerAuth: []
      summary: Create a new tradeTags
      tags:
      - tradeTags
  /api/v1/tradeTags/{tradeID}:
    delete:
      consumes:
      - application/json
      description: Deletes a existing tradeTags identified by the given tradeID in
        the path.
      parameters:
      - description: tradeID
        in: path
        name: tradeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteTradeTagsByTradeIDReply'
      security:
      - BearerAuth: []
      summary: Delete a tradeTags by tradeID
      tags:
      - tradeTags
    get:
      consumes:
      - application/json
      description: Gets detailed information of a tradeTags specified by the given
        tradeID in the path.
      parameters:
      - description: tradeID
        in: path
        name: tradeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetTradeTagsByTradeIDReply'
      security:
      - BearerAuth: []
      summary: Get a tradeTags by tradeID
      tags:
      - tradeTags
    put:
      consumes:
      - application/json
      description: Updates the specified tradeTags by given tradeID in the path, support
        partial update.
      parameters:
      - description: tradeID
        in: path
        name: tradeID
        required: true
        type: string
      - description: tradeTags information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateTradeTagsByTradeIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateTradeTagsByTradeIDReply'
      security:
      - BearerAuth: []
      summary: Update a tradeTags by tradeID
      tags:
      - tradeTags
  /api/v1/tradeTags/all:
    post:
      consumes:
      - application/json
      description: Returns a list of all tradeTags.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListTradeTagsReply'
      security:
      - BearerAuth: []
      summary: 获取全部的tradeTags
      tags:
      - tradeTags
  /api/v1/tradeTags/list:
    post:
      consumes:
      - application/json
      description: Returns a paginated list of tradeTags based on query filters, including
        page number and size.
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListTradeTagsReply'
      security:
      - BearerAuth: []
      summary: Get a paginated list of tradeTags by custom conditions
      tags:
      - tradeTags
  /api/v1/trades:
    post:
      consumes:
      - application/json
      description: Creates a new trades entity using the provided data in the request
        body.
      parameters:
      - description: trades information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateTradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateTradesReply'
      security:
      - BearerAuth: []
      summary: Create a new trades
      tags:
      - trades
  /api/v1/trades/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a existing trades identified by the given id in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteTradesByIDReply'
      security:
      - BearerAuth: []
      summary: Delete a trades by id
      tags:
      - trades
    get:
      consumes:
      - application/json
      description: Gets detailed information of a trades specified by the given id
        in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetTradesByIDReply'
      security:
      - BearerAuth: []
      summary: Get a trades by id
      tags:
      - trades
    put:
      consumes:
      - application/json
      description: Updates the specified trades by given id in the path, support partial
        update.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: trades information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateTradesByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateTradesByIDReply'
      security:
      - BearerAuth: []
      summary: Update a trades by id
      tags:
      - trades
  /api/v1/trades/list:
    post:
      consumes:
      - application/json
      description: Returns a paginated list of trades based on query filters, including
        page number and size.
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListTradessReply'
      security:
      - BearerAuth: []
      summary: Get a paginated list of tradess by custom conditions
      tags:
      - trades
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Creates a new users entity using the provided data in the request
        body.
      parameters:
      - description: users information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateUsersReply'
      security:
      - BearerAuth: []
      summary: Create a new users
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a existing users identified by the given id in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUsersByIDReply'
      security:
      - BearerAuth: []
      summary: Delete a users by id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Gets detailed information of a users specified by the given id
        in the path.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUsersByIDReply'
      security:
      - BearerAuth: []
      summary: Get a users by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates the specified users by given id in the path, support partial
        update.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: users information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUsersByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateUsersByIDReply'
      security:
      - BearerAuth: []
      summary: Update a users by id
      tags:
      - users
  /api/v1/users/condition:
    post:
      consumes:
      - application/json
      description: Returns a single users that matches the specified filter conditions.
      parameters:
      - description: query condition
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Conditions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUsersByConditionReply'
      security:
      - BearerAuth: []
      summary: Get a users by custom condition
      tags:
      - users
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: Login a users entity using the provided data in the request body.
      parameters:
      - description: users information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.LoginReply'
      summary: Login a users
      tags:
      - users
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: Creates a new users entity using the provided data in the request
        body.
      parameters:
      - description: users information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.RegisterReply'
      summary: Register a new users
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type Bearer your-jwt-token to Value
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
